// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Npgsql;
using PostgresTester;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace PostgresTester
{
    public partial class testContext
    {
        private ItestContextProcedures _procedures;

        public virtual ItestContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new testContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ItestContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CustOrderHistResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<EmployeeSalesbyCountryResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<SalesbyYearResult>().HasNoKey().ToView(null);
        }
    }

    public partial class testContextProcedures : ItestContextProcedures
    {
        private readonly testContext _context;

        public testContextProcedures(testContext context)
        {
            _context = context;
        }

        public virtual async Task<List<CustOrderHistResult>> CustOrderHistAsync(string CustomerID, CancellationToken cancellationToken = default)
        {

            var npgsqlParameters = new []
            {
                new NpgsqlParameter
                {
                    Value = CustomerID ?? Convert.DBNull,
                    NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Varchar,
                },
            };
            var _ = await _context.SqlQueryAsync<CustOrderHistResult>("SELECT * FROM  \"public\".\"CustOrderHist\" $1", npgsqlParameters, cancellationToken);

            return _;
        }

        public virtual async Task<List<EmployeeSalesbyCountryResult>> EmployeeSalesbyCountryAsync(DateTime? Beginning_Date, DateTime? Ending_Date, CancellationToken cancellationToken = default)
        {

            var npgsqlParameters = new []
            {
                new NpgsqlParameter
                {
                    Value = Beginning_Date ?? Convert.DBNull,
                    NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Timestamp,
                },
                new NpgsqlParameter
                {
                    Value = Ending_Date ?? Convert.DBNull,
                    NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Timestamp,
                },
            };
            var _ = await _context.SqlQueryAsync<EmployeeSalesbyCountryResult>("SELECT * FROM  \"public\".\"Employee Sales by Country\" $1, $2", npgsqlParameters, cancellationToken);

            return _;
        }

        public virtual async Task<List<SalesbyYearResult>> SalesbyYearAsync(DateTime? Beginning_Date, DateTime? Ending_Date, CancellationToken cancellationToken = default)
        {

            var npgsqlParameters = new []
            {
                new NpgsqlParameter
                {
                    Value = Beginning_Date ?? Convert.DBNull,
                    NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Timestamp,
                },
                new NpgsqlParameter
                {
                    Value = Ending_Date ?? Convert.DBNull,
                    NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Timestamp,
                },
            };
            var _ = await _context.SqlQueryAsync<SalesbyYearResult>("SELECT * FROM  \"public\".\"Sales by Year\" $1, $2", npgsqlParameters, cancellationToken);

            return _;
        }
    }
}
